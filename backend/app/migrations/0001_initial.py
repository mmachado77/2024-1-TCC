# Generated by Django 5.0.3 on 2025-01-15 21:31

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avaliado_orientador', models.BooleanField(default=False)),
                ('avaliado_avaliador1', models.BooleanField(default=False)),
                ('avaliado_avaliador2', models.BooleanField(default=False)),
                ('comentarios_orientador', models.TextField(blank=True, null=True)),
                ('comentarios_avaliador1', models.TextField(blank=True, null=True)),
                ('comentarios_avaliador2', models.TextField(blank=True, null=True)),
                ('ajuste', models.BooleanField(default=False)),
                ('descricao_ajuste', models.TextField(blank=True, null=True)),
                ('data_entrega_ajuste', models.DateTimeField(blank=True, null=True)),
                ('tcc_definitivo', models.FileField(blank=True, null=True, upload_to='tcc/documento')),
                ('ficha_avaliacao', models.FileField(blank=True, null=True, upload_to='avaliacoes/fichas')),
                ('data_avaliacao', models.DateTimeField(blank=True, null=True)),
                ('parecer_orientador', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=255, verbose_name='cpf')),
                ('email', models.EmailField(max_length=254)),
                ('dataCadastro', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='avatar')),
                ('linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('github', models.CharField(blank=True, max_length=255, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Credenciais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do curso')),
                ('sigla', models.CharField(max_length=3, verbose_name='Sigla do curso')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('limite_orientacoes', models.IntegerField(default=5, verbose_name='Limite de orientações por professor')),
                ('regra_sessao_publica', models.CharField(choices=[('Desabilitar', 'DESABILITAR'), ('Opcional', 'OPCIONAL'), ('Obrigatório', 'OBRIGATORIO')], default='Opcional', max_length=20, verbose_name='Regra para sessões públicas')),
                ('prazo_propostas_inicio', models.DateField(verbose_name='Início do prazo para envio de propostas')),
                ('prazo_propostas_fim', models.DateField(verbose_name='Fim do prazo para envio de propostas')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(default='2024/1', max_length=255, verbose_name='Período')),
                ('dataAberturaSemestre', models.DateField(default=datetime.datetime.today)),
                ('dataFechamentoSemestre', models.DateField(default=datetime.datetime.today)),
                ('dataAberturaPrazoPropostas', models.DateField(default=datetime.datetime.today)),
                ('dataFechamentoPrazoPropostas', models.DateField(default=datetime.datetime.today)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sessao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local', models.CharField(max_length=255)),
                ('forma_apresentacao', models.CharField(max_length=255, null=True)),
                ('parecer_orientador', models.TextField(blank=True, null=True)),
                ('parecer_coordenador', models.TextField(blank=True, null=True)),
                ('data_inicio', models.DateTimeField()),
                ('documentoTCCSessao', models.FileField(blank=True, null=True, upload_to='sessao/documento')),
                ('prazoEntregaDocumento', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('validacaoOrientador', models.BooleanField(default=False)),
                ('validacaoCoordenador', models.BooleanField(default=False)),
                ('lembrete_semana', models.BooleanField(default=False)),
                ('lembrete_dia', models.BooleanField(default=False)),
                ('data_agendamento', models.DateTimeField(blank=True, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusCadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aprovacao', models.BooleanField(default=False)),
                ('justificativa', models.CharField(blank=True, max_length=255, null=True)),
                ('dataStatus', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Estudante',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.usuario')),
                ('matricula', models.CharField(max_length=255, verbose_name='Matrícula')),
                ('area_interesse', models.TextField(blank=True, null=True, verbose_name='Área de Interesse')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='estudantes', to='app.curso', verbose_name='Curso')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.usuario',),
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.usuario')),
                ('area_atuacao', models.CharField(blank=True, choices=[('MATEMATICA', 'Matematica'), ('PROBABILIDADE E ESTATISTICA', 'Probabilidade E Estatistica'), ('CIENCIA DA COMPUTACAO', 'Ciencia Da Computacao'), ('ASTRONOMIA', 'Astronomia'), ('FISICA', 'Fisica'), ('QUIMICA', 'Quimica'), ('GEOCIENCIAS', 'Geociencias'), ('BIOLOGIA GERAL', 'Biologia Geral'), ('BIOQUIMICA', 'Bioquimica'), ('FISIOLOGIA', 'Fisiologia'), ('GENETICA', 'Genetica'), ('BOTANICA', 'Botanica'), ('ZOOLOGIA', 'Zoologia'), ('ECOLOGIA', 'Ecologia'), ('MORFOLOGIA', 'Morfologia'), ('PARASITOLOGIA', 'Parasitologia'), ('MICROBIOLOGIA', 'Microbiologia'), ('IMUNOLOGIA', 'Imunologia'), ('FARMACOLOGIA', 'Farmacologia'), ('ODONTOLOGIA', 'Odontologia'), ('MEDICINA', 'Medicina'), ('BIOFISICA', 'Biofisica'), ('PSICOBIOLOGIA', 'Psicobiologia'), ('ENGENHARIA CIVIL', 'Engenharia Civil'), ('ENGENHARIA DE MINAS', 'Engenharia De Minas'), ('ENGENHARIA DE MATERIAIS E METALURGICA', 'Engenharia De Materiais E Metalurgica'), ('ENGENHARIA ELETRICA', 'Engenharia Eletrica'), ('ENGENHARIA MECANICA', 'Engenharia Mecanica'), ('ENGENHARIA QUIMICA', 'Engenharia Quimica'), ('ENGENHARIA SANITARIA', 'Engenharia Sanitaria'), ('ENGENHARIA DE PRODUCAO', 'Engenharia De Producao'), ('ENGENHARIA NUCLEAR', 'Engenharia Nuclear'), ('ENGENHARIA DE TRANSPORTES', 'Engenharia De Transportes'), ('ENGENHARIA NAVAL', 'Engenharia Naval'), ('ENGENHARIA AEROESPACIAL', 'Engenharia Aeroespacial'), ('ENGENHARIA BIOMEDICA', 'Engenharia Biomedica'), ('ENGENHARIA DE PESCA', 'Engenharia De Pesca'), ('OCEANOGRAFIA', 'Oceanografia'), ('CIENCIA E TECNOLOGIA DE ALIMENTOS', 'Ciencia E Tecnologia De Alimentos'), ('NUTRICAO', 'Nutricao'), ('SAUDE COLETIVA', 'Saude Coletiva'), ('ENFERMAGEM', 'Enfermagem'), ('FARMACIA', 'Farmacia'), ('VETERINARIA', 'Veterinaria'), ('AGRONOMIA', 'Agronomia'), ('RECURSOS FLORESTAIS E ENGENHARIA FLORESTAL', 'Recursos Florestais E Engenharia Florestal'), ('ENGENHARIA AGRICOLA', 'Engenharia Agricola'), ('ZOOTECNIA', 'Zootecnia'), ('ECONOMIA DOMESTICA', 'Economia Domestica'), ('DESENHO INDUSTRIAL', 'Desenho Industrial'), ('ARQUITETURA E URBANISMO', 'Arquitetura E Urbanismo'), ('PLANEJAMENTO URBANO E REGIONAL', 'Planejamento Urbano E Regional'), ('DEMOGRAFIA', 'Demografia'), ('CIENCIA DA INFORMACAO', 'Ciencia Da Informacao'), ('MUSEOLOGIA', 'Museologia'), ('COMUNICACAO', 'Comunicacao'), ('SERVICO SOCIAL', 'Servico Social'), ('ECONOMIA', 'Economia'), ('ADMINISTRACAO', 'Administracao'), ('CIENCIA CONTABEIS', 'Ciencia Contabeis'), ('TURISMO', 'Turismo'), ('DIREITO', 'Direito'), ('EDUCACAO', 'Educacao'), ('FILOSOFIA', 'Filosofia'), ('SOCIOLOGIA', 'Sociologia'), ('ANTROPOLOGIA', 'Antropologia'), ('CIENCIA POLITICA', 'Ciencia Politica'), ('TEOLOGIA', 'Teologia'), ('HISTORIA', 'Historia'), ('GEOGRAFIA', 'Geografia'), ('PSICOLOGIA', 'Psicologia'), ('ARTES', 'Artes'), ('LETRAS', 'Letras'), ('LINGUISTICA', 'Linguistica'), ('INTERDISCIPLINAR', 'Interdisciplinar'), ('ENSINO', 'Ensino'), ('MATERIAIS', 'Materiais'), ('BIOTECNOLOGIA', 'Biotecnologia'), ('CIENCIAS AMBIENTAIS', 'Ciencias Ambientais')], max_length=255, null=True)),
                ('titulo', models.CharField(blank=True, choices=[('TECNICO', 'Tecnico'), ('GRADUACAO', 'Graduacao'), ('POSGRADUACAO', 'Posgraduacao'), ('MESTRADO', 'Mestrado'), ('DOUTORADO', 'Doutorado'), ('POSDOUTORADO', 'Posdoutorado')], max_length=255, null=True)),
                ('area_interesse', models.TextField(blank=True, null=True)),
                ('status', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status_cadastro', to='app.statuscadastro')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.usuario',),
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.CharField(max_length=10)),
                ('descricao', models.CharField(max_length=255)),
                ('assunto', models.CharField(max_length=255)),
                ('mensagem', models.TextField()),
                ('notificacao', models.CharField(blank=True, max_length=100, null=True)),
                ('url_destino', models.CharField(blank=True, max_length=255, null=True)),
                ('data_alteracao', models.DateTimeField(auto_now_add=True)),
                ('user_alteracao', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.usuario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SessaoPrevia',
            fields=[
                ('sessao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.sessao')),
                ('comentarios_avaliador1', models.TextField(blank=True, null=True)),
                ('comentarios_avaliador2', models.TextField(blank=True, null=True)),
                ('avaliado', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('app.sessao',),
        ),
        migrations.CreateModel(
            name='Tcc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tema', models.CharField(max_length=255)),
                ('resumo', models.TextField()),
                ('dataSubmissaoProposta', models.DateTimeField(auto_now_add=True)),
                ('documentoTCC', models.TextField(blank=True, null=True)),
                ('autorizacaoPublicacao', models.FileField(blank=True, null=True, upload_to='tcc/autorizacaoPublicacao')),
                ('dataInicio', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tccsDoCurso', to='app.curso')),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tccsDoSemestre', to='app.semestre')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tccsDoEstudante', to='app.estudante')),
                ('coorientador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tccsCoorientados', to='app.professor')),
                ('orientador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tccsOrientados', to='app.professor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sessao',
            name='tcc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.tcc'),
        ),
        migrations.CreateModel(
            name='TccStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PROPOSTA_ANALISE_PROFESSOR', 'Proposta Analise Professor'), ('PROPOSTA_RECUSADA_PROFESSOR', 'Proposta Recusada Professor'), ('PROPOSTA_ANALISE_COORDENADOR', 'Proposta Analise Coordenador'), ('PROPOSTA_RECUSADA_COORDENADOR', 'Proposta Recusada Coordenador'), ('DESENVOLVIMENTO', 'Desenvolvimento'), ('PREVIA_ORIENTADOR', 'Previa Orientador'), ('PREVIA_COORDENADOR', 'Previa Coordenador'), ('PREVIA_AGENDADA', 'Previa Agendada'), ('REPROVADO_PREVIA', 'Reprovado Previa'), ('PREVIA_OK', 'Previa Ok'), ('FINAL_ORIENTADOR', 'Final Orientador'), ('FINAL_COORDENADOR', 'Final Coordenador'), ('FINAL_AGENDADA', 'Final Agendada'), ('REPROVADO_FINAL', 'Reprovado Final'), ('AJUSTE', 'Ajuste'), ('APROVADO', 'Aprovado')], max_length=255)),
                ('justificativa', models.TextField(blank=True, null=True)),
                ('dataStatus', models.DateTimeField(auto_now=True)),
                ('tcc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.tcc')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(max_length=500)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usuario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemplateAvaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_avaliadores', models.IntegerField(verbose_name='Número de avaliadores')),
                ('nota_minima', models.FloatField(verbose_name='Nota mínima para aprovação')),
                ('peso_orientador', models.FloatField(verbose_name='Peso da nota do orientador')),
                ('peso_avaliadores', models.FloatField(verbose_name='Peso das notas dos avaliadores')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('curso', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='template_avaliacao', to='app.curso', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Template de Avaliação',
                'verbose_name_plural': 'Templates de Avaliação',
            },
        ),
        migrations.CreateModel(
            name='CriterioAvaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do critério')),
                ('nota_maxima', models.FloatField(verbose_name='Nota máxima')),
                ('area', models.CharField(max_length=255, verbose_name='Área de avaliação (ex: Trabalho Escrito, Apresentação)')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criterios', to='app.templateavaliacao', verbose_name='Template de Avaliação')),
            ],
            options={
                'verbose_name': 'Critério de Avaliação',
                'verbose_name_plural': 'Critérios de Avaliação',
            },
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.usuario')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordenadores', to='app.curso')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.usuario',),
        ),
        migrations.CreateModel(
            name='ProfessorExterno',
            fields=[
                ('professor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.professor')),
                ('identidade', models.FileField(blank=True, null=True, upload_to='media/professoresExterno/identidade')),
                ('diploma', models.FileField(blank=True, null=True, upload_to='media/professoresExterno/diploma')),
                ('dataStatus', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('app.professor',),
        ),
        migrations.CreateModel(
            name='ProfessorInterno',
            fields=[
                ('professor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.professor')),
                ('matricula', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('app.professor',),
        ),
        migrations.CreateModel(
            name='Banca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataSugestao', models.DateTimeField(auto_now_add=True, null=True)),
                ('autorSugestao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.usuario')),
                ('sessao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.sessao')),
                ('professores', models.ManyToManyField(blank=True, related_name='banca_professores', to='app.professor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SessaoFinal',
            fields=[
                ('sessao_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.sessao')),
                ('avaliacao', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.avaliacao')),
            ],
            options={
                'abstract': False,
            },
            bases=('app.sessao',),
        ),
        migrations.CreateModel(
            name='SemestreCoordenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataAlteracao', models.DateField(auto_now_add=True)),
                ('semestre', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.semestre')),
                ('coordenador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.professorinterno')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HorarioAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario', models.DateTimeField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios_atendimento', to='app.professorinterno')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='professores',
            field=models.ManyToManyField(related_name='cursos', to='app.professorinterno', verbose_name='Professores associados ao curso'),
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criterio', models.CharField(choices=[('Estrutura do Trabalho', 'Estrutura Trabalho'), ('Relevância, Originalidade e Qualidade', 'Relevancia Originalidade Qualidade'), ('Grau de Conhecimento', 'Grau Conhecimento'), ('Bibliografia Apresentada', 'Bibliografia Apresentada'), ('Utilização de Recursos Didáticos', 'Utilizacao Recursos Didaticos'), ('Conteúdo da Apresentação', 'Conteudo Apresentacao'), ('Utilização do Tempo e Síntese', 'Utilizacao Tempo Sintese')], max_length=50)),
                ('nota', models.FloatField()),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.avaliacao')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor')),
            ],
            options={
                'unique_together': {('avaliacao', 'professor', 'criterio')},
            },
        ),
    ]
